Принципы

1.	Базовый паттерн MVC 
2.	Вся логика разбивается на логически и функционально ограниченные пакеты
3.	Узловые контроллеры доступа к данным синглтоны и используют статические функции доступа
4.	Узловые контроллеры содержат внутренние реестры для всех подконтрольных сущностей.
	Эти сущности содержат id, согласно их номеру в реестре
5.	При создании нового экземпляра модели, ей присваивается id согласно свободному номеру в 
	реестре ее контроллера
6.	Доступ к моделям данных снаружи пакетов только через статические шины доступа по id
7.	Методы модели содержат исключительно internal сеттеры данных без логики преобразования, но, 
	возможно, с вызовом события изменения данных
8.	Изменение данных модели по внешнему запросу происходит только через статическую шину
9.	Интерфейсы применяются для реализации логики агентов-представителей контроллера для 
	указания их в реестрах (частные случаи)

Стандартный алгоритм работы

Визуализация:

1.	Доступ к реестру моделей через статическую шину
2.	Кеширование указателя на модель данных
3.	Обработка данных по алгоритму
4.	Генерация событий для внешних подписчиков-UI компонентов

Изменение:

1.	Доступ к реестру моделей через статическую шину
2.	Кеширование указателя на модель данных
3.	Обработка данных по алгоритму
4.	Вызов процедуры сохранения данных через статическую шину

Структура

*	Ядро
    -	Модель приложения
    -	Контроллер загрузки
    -	Абстракция базы данных
    -	Абстракция системы базовых настроек
    -	Абстракция пользовательских интерфейсов
*	Расширения
    -	Синтаксический сахар 
    -	Стандартные операции
*	Логгер
*	Unity реализация
    -	Интеграторы и контроллеры модели приложения
    -	Помощник загрузки
    -	Реализация базы данных
    -	Контроллер файлообмена
    -	Реализация логгера
    -	Реализация системы базовых настроек
    -	Реализация системы пользовательских интерфейсов и вспомогательные компоненты
    -	Различные вспомогательные компоненты

Основные элементы системы

1.	Модель данных (Model), содержит данные, события изменений и внутрипакетные сеттеры
2.	Статическая шина доступа (ModelController), предоставляет внешние точки доступа к данным, 
содержит общий индекс всех экземпляров указанной модели, содержит базовую («нейтральную» 
или абстрактную) логику
3.	Контроллеры представления (ModelJsonFormatter), содержит статические функции расширения 
позволяющие получить данные модели в подготовленном виде
4.	Вспомогательные контроллеры (ModelLoadingHandler), содержат логику рефлексии на внешние 
события

